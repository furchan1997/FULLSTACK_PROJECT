import { useEffect, useState } from "react";
import { useContent } from "../context/contents.context";
import { useLocation, useNavigate, useParams } from "react-router-dom";
import Btn from "../components/btn";
import PageHeaders from "../components/common/pageHeaders";
import HoroscopsContent from "../components/horoscopsContent";
import { useAuth } from "../context/auth.context";
// הצגת הורוסקפים לפי מזל
function HoroscopZodiac() {
  const {
    error,
    loading,
    horoscops,
    likeHoroscop,
    fetchToLike,
    searchResult,
    handleSearchResult,
  } = useContent();
  const { user } = useAuth();
  const { sign } = useParams();
  const navigate = useNavigate();

  const handleLikeClick = async (ID) => {
    await likeHoroscop(ID);
    await fetchToLike(); // טוען מחדש את הלייקים
    handleSearchResult(); // מעדכן את תוצאות החיפוש
  };
  const handleHoroscop = async (ID) => {
    if (!ID) {
      alert(`ERROR: ${error}`); // אם אין מזהה, מציג שגיאה
    }
    navigate(`/horoscops/${ID}`); // מעביר לדף ההורוסקופ הספציפי
  };

  const filteredHoroscop = horoscops.filter((h) => h.sign === sign);

  if (filteredHoroscop.length === 0) {
    return <div>אין ההורוסקופים כרגע...</div>;
  }

  if (loading) {
    return (
      <div className="rtl">
        <p>טוען...</p> {/* מציג הודעת טעינה אם הנתונים נטענים */}
      </div>
    );
  }

  if (error) {
    return (
      <div className="rtl">
        <p>שגיאה: {error}</p> {/* מציג שגיאה אם ישנה בעיה */}
      </div>
    );
  }

  return (
    <div className="container">
      <div className="row my-5 gap-3 m-auto">
        {filteredHoroscop.map((horoscop, id) => (
          <div key={id} className="col-12">
            <div className="card shadow-lg border-1 d-flex flex-column">
              <HoroscopsContent
                key={id}
                sign={horoscop?.sign}
                title={horoscop?.title}
                subtitle={horoscop?.subtitle}
                likes={horoscop?.likes?.length ?? 0} // בודק אם יש לייקים ומחזיר 0 אם אין
                image={horoscop?.image}
                goToHoroscop={() => handleHoroscop(horoscop?._id)}
                toggleLikeBuUser={() => handleLikeClick(horoscop?._id)}
                isLiked={horoscop?.likes?.includes(user?.id)}
              />
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default HoroscopZodiac;


### חישוב נומורולוגי

import { useState } from "react";
import Btn from "../../components/btn";
import Input from "../../components/input";

function NumerologicalCalculation() {
  const [date, setDate] = useState("");
  const [result, setResult] = useState(null);

  const sumDigit = (date) => {
    const [year, month, day] = date.split("-");
    const allDigits = year + month + day;

    let sum = allDigits
      .split("")
      .map(Number)
      .reduce((acc, curr) => acc + curr, 0);

    while (sum > 9 && sum !== 11 && sum !== 22) {
      sum = sum
        .toString()
        .split("")
        .map(Number)
        .reduce((acc, curr) => acc + curr, 0);
    }

    return sum;
  };

  const handleClickResult = () => {
    const calculatedResult = sumDigit(date);
    setResult(calculatedResult);
    console.log(result);
  };

  return (
    <div className="container numerological-page rtl my-1 text-white p-5">
      <h2 className="text-center">חישוב נומורולוגי</h2>

      {/* שינוי כאן: direction לפי גודל מסך */}
      <div className="d-flex flex-column flex-md-row gap-3">
        {/* טופס */}
        <div className="d-flex flex-wrap gap-3 w-100 w-md-50 fw-bold">
          <Input label={"שם פרטי"} type={"text"} />
          <Input label={"שם משפחה"} type={"text"} />
          <Input
            label={"תאריך לידה"}
            type={"date"}
            value={date}
            onChange={(e) => setDate(e.target.value)}
          />
          <Btn
            type={"button"}
            className="custom-bg-gold custom-purple-color w-50 fw-bold"
            description={"חשב/י"}
            onClick={handleClickResult}
          />
        </div>

        {/* תוצאה */}
        <div className="d-flex w-100 w-md-50 justify-content-center">
          <p className="m-0 fw-bold">
            {result !== null && !Number.isNaN(result) ? (
              <>
                התוצאה היא:
                <br />
                {result}
              </>
            ) : result !== null && Number.isNaN(result) ? (
              <>הינך חייב למלא את התאריך</>
            ) : (
              <>הנך מוזמן/ת לחשב את מספר הגורל שלך</>
            )}
          </p>
        </div>
      </div>
    </div>
  );
}

export default NumerologicalCalculation;


